// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RankedElo.Persistence;

namespace RankedElo.Persistence.Migrations
{
    [DbContext(typeof(RankedEloDbContext))]
    [Migration("20200627181051_RedoPersistence")]
    partial class RedoPersistence
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("RankedElo.Core.Entities.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Team1Score")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Team2Score")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Matches");

                    b.HasDiscriminator<int>("Type").HasValue(-1);
                });

            modelBuilder.Entity("RankedElo.Core.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("CurrentElo")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("RankedElo.Core.Entities.SoloTeamPlayer", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MatchId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SoloTeamMatchId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Team")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlayerId", "MatchId");

                    b.HasIndex("MatchId");

                    b.HasIndex("SoloTeamMatchId");

                    b.ToTable("SoloTeamPlayer");
                });

            modelBuilder.Entity("RankedElo.Core.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("CurrentElo")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("RankedElo.Core.Entities.SoloTeamMatch", b =>
                {
                    b.HasBaseType("RankedElo.Core.Entities.Match");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("RankedElo.Core.Entities.TeamMatch", b =>
                {
                    b.HasBaseType("RankedElo.Core.Entities.Match");

                    b.Property<int?>("Team1Id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Team2Id")
                        .HasColumnType("INTEGER");

                    b.HasIndex("Team1Id");

                    b.HasIndex("Team2Id");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("RankedElo.Core.Entities.TwoPlayerMatch", b =>
                {
                    b.HasBaseType("RankedElo.Core.Entities.Match");

                    b.Property<int?>("Player1Id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Player2Id")
                        .HasColumnType("INTEGER");

                    b.HasIndex("Player1Id");

                    b.HasIndex("Player2Id");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("RankedElo.Core.Entities.SoloTeamPlayer", b =>
                {
                    b.HasOne("RankedElo.Core.Entities.Match", "Match")
                        .WithMany()
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RankedElo.Core.Entities.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RankedElo.Core.Entities.SoloTeamMatch", null)
                        .WithMany("Players")
                        .HasForeignKey("SoloTeamMatchId");
                });

            modelBuilder.Entity("RankedElo.Core.Entities.TeamMatch", b =>
                {
                    b.HasOne("RankedElo.Core.Entities.Team", "Team1")
                        .WithMany()
                        .HasForeignKey("Team1Id");

                    b.HasOne("RankedElo.Core.Entities.Team", "Team2")
                        .WithMany()
                        .HasForeignKey("Team2Id");
                });

            modelBuilder.Entity("RankedElo.Core.Entities.TwoPlayerMatch", b =>
                {
                    b.HasOne("RankedElo.Core.Entities.Player", "Player1")
                        .WithMany()
                        .HasForeignKey("Player1Id");

                    b.HasOne("RankedElo.Core.Entities.Player", "Player2")
                        .WithMany()
                        .HasForeignKey("Player2Id");
                });
#pragma warning restore 612, 618
        }
    }
}
